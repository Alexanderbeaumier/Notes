name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: notes
  ECS_CLUSTER: NotesCluster
  ECS_SERVICE: NotesService

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS service
      run: |
        # Get current task definition JSON
        TASK_DEFINITION=$(aws ecs describe-task-definition \
          --task-definition ${{ env.ECS_SERVICE }} \
          --region ${{ env.AWS_REGION }} \
          --query "taskDefinition" \
          --output json)

        # Register new task definition with updated image
        NEW_TASK_DEFINTION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" \
          '.containerDefinitions[0].image = $IMAGE')

        echo "$NEW_TASK_DEFINTION" > new-task-definition.json

        aws ecs register-task-definition --cli-input-json file://new-task-definition.json

        # Update ECS service to use the new task definition
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment


